
stages:
  - initial_report
  - quick_checks
  - midway_report
  - builds
  - final_report


variables:
  GITHUB_REPO_API_URL: "https://api.github.com/repos/ipbus/ipbus-firmware"
  IPBUS_DOCKER_REGISTRY: "gitlab-registry.cern.ch/ipbus/ipbus-docker"


# -----------------------------------------------------------------------------
# GitHub interface jobs
.job_template: &template_github_commit_status
  image: cern/cc7-base:20170113
  tags:
    - docker
  only:
    - branches
    - web
  dependencies: []

github_commit_status:start:
  <<: *template_github_commit_status
  stage: initial_report
  when: always
  script:
    - "curl -H \"Authorization: token ${GITHUB_API_TOKEN}\" --data '{\"state\" : \"pending\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline has started\", \"context\" : \"gitlab-ci-quick\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_COMMIT_SHA}"
    - "if [[ $CI_COMMIT_REF_NAME =~ ^pull-requests/[0-9]+$ ]]; then curl -H \"Authorization: token ${GITHUB_API_TOKEN}\" --data '{\"state\" : \"pending\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline has started\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_COMMIT_SHA} ; fi"

github_commit_status:midway:success:
  <<: *template_github_commit_status
  stage: midway_report
  when: on_success
  script:
    - "curl -H \"Authorization: token ${GITHUB_API_TOKEN}\" --data '{\"state\" : \"success\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI quick jobs completed successfully!\", \"context\" : \"gitlab-ci-quick\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_COMMIT_SHA}"

github_commit_status:end:failure:
  <<: *template_github_commit_status
  stage: final_report
  when: on_failure
  script:
    - "curl -H \"Authorization: token ${GITHUB_API_TOKEN}\" --data '{\"state\" : \"failure\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"Jobs have failed in CI pipeline\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_COMMIT_SHA}"

github_commit_status:end:success:
  <<: *template_github_commit_status
  stage: final_report
  only:
    - /^pull-requests.*$/
  when: on_success
  script:
    - "curl -H \"Authorization: token ${GITHUB_API_TOKEN}\" --data '{\"state\" : \"success\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline completed successfully!\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_COMMIT_SHA}"
# -----------------------------------------------------------------------------



# -----------------------------------------------------------------------------
# Job templates
.job_template: &template_base
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-fw-dev-cc7:master__ipbb-enhancement-45-fli-sim-udp-e8c12b19
  before_script:
    - source /software/Xilinx/Vivado/${VIVADO_VERSION}/settings64.sh

.job_template: &template_vivado_quick_check
  <<: *template_base
  tags:
    - docker
    - xilinx-tools
  stage: quick_checks
  script:
    - ipbb init work_area
    - cd work_area
    - ln -s ${CI_PROJECT_DIR} src/ipbus-firmware
    - ipbb proj create vivado -t top_${PROJ}.dep ${CI_JOB_NAME#quick_check:} ipbus-firmware:projects/example
    - cd proj/${CI_JOB_NAME#quick_check:}
    - ipbb vivado make-project
    - ipbb vivado check-syntax
  artifacts:
    when: on_success
    paths:
      - work_area
    expire_in: 1 day



.job_template: &template_vivado_build
  <<: *template_base
  tags:
    - docker
    - xilinx-tools
  stage: builds
  only:
    - /^pull-requests.[0-9]+$/
    - web
  script:
    - cd work_area/proj/${CI_JOB_NAME#build:}
    - ipbb vivado synth -j4
    - ipbb vivado impl
    - ipbb vivado bitfile
    - ipbb vivado package
  artifacts:
    when: on_success
    paths:
      - work_area/proj/*/package/*.tgz
    expire_in: 2 weeks
# -----------------------------------------------------------------------------



quick_check:enclustra_ax3_pm3_a35__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: enclustra_ax3_pm3_a35

quick_check:enclustra_ax3_pm3_a35__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: enclustra_ax3_pm3_a35

quick_check:enclustra_ax3_pm3_a50__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: enclustra_ax3_pm3_a50
quick_check:enclustra_ax3_pm3_a50__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: enclustra_ax3_pm3_a50

quick_check:kc705_basex__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: kc705_basex
quick_check:kc705_basex__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: kc705_basex

quick_check:kc705_gmii__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: kc705_gmii
quick_check:kc705_gmii__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: kc705_gmii

quick_check:kcu105_basex__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: kcu105_basex
quick_check:kcu105_basex__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: kcu105_basex

quick_check:zcu102_basex__2017.4:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2017.4"
    PROJ: zcu102_basex
quick_check:zcu102_basex__2018.3:
  <<: *template_vivado_quick_check
  variables:
    VIVADO_VERSION: "2018.3"
    PROJ: zcu102_basex



build:enclustra_ax3_pm3_a35__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:enclustra_ax3_pm3_a35__2017.4
build:enclustra_ax3_pm3_a35__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:enclustra_ax3_pm3_a35__2018.3

build:enclustra_ax3_pm3_a50__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:enclustra_ax3_pm3_a50__2017.4
build:enclustra_ax3_pm3_a50__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:enclustra_ax3_pm3_a50__2018.3

build:kc705_basex__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:kc705_basex__2017.4
build:kc705_basex__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:kc705_basex__2018.3

build:kc705_gmii__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:kc705_gmii__2017.4
build:kc705_gmii__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:kc705_gmii__2018.3

build:kcu105_basex__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:kcu105_basex__2017.4
build:kcu105_basex__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:kcu105_basex__2018.3

build:zcu102_basex__2017.4:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2017.4"
  dependencies:
    - quick_check:zcu102_basex__2017.4
build:zcu102_basex__2018.3:
  <<: *template_vivado_build
  variables:
    VIVADO_VERSION: "2018.3"
  dependencies:
    - quick_check:zcu102_basex__2018.3



run_sim_udp:vivado2018.3:modelsim10.6c:
  <<: *template_base
  tags:
    - docker
    - docker-cap-net-admin
    - docker-device-net-tun
    - xilinx-tools
  stage: quick_checks
  variables:
    VIVADO_VERSION: "2018.3"
    IPBB_SIMLIB_BASE: /scratch/xilinx-simlibs
  script:
    - export PATH=/software/mentor/modelsim_10.6c/modeltech/bin:$PATH
    - export PATH=/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH

    - ipbb init work_area
    - cd work_area
    - ln -s ${CI_PROJECT_DIR} src/ipbus-firmware
    - /${CI_PROJECT_DIR}/work_area/src/ipbus-firmware/tests/ci/test-run-sim-udp.sh sim

run_sim:vivado2018.3:modelsim10.6c:
  <<: *template_base
  tags:
    - docker
    - docker-cap-net-admin
    - docker-device-net-tun
    - xilinx-tools
  stage: quick_checks
  variables:
    VIVADO_VERSION: "2018.3"
    IPBB_SIMLIB_BASE: /scratch/xilinx-simlibs
  script:
    - sudo openvpn --mktun --dev tap0
    - sudo /sbin/ifconfig tap0 up 192.168.201.1
    - sudo chmod a+rw /dev/net/tun
    - export PATH=/software/mentor/modelsim_10.6c/modeltech/bin:$PATH

    - ipbb init work_area
    - cd work_area
    - ln -s ${CI_PROJECT_DIR} src/ipbus-firmware
    - /${CI_PROJECT_DIR}/work_area/src/ipbus-firmware/tests/ci/test-run-sim.sh sim

run_ram_slaves_testbench_sim:vivado2018.3:modelsim10.6c:
  <<: *template_base
  tags:
    - docker
    - docker-cap-net-admin
    - docker-device-net-tun
    - xilinx-tools
  stage: quick_checks
  variables:
    VIVADO_VERSION: "2018.3"
    IPBB_SIMLIB_BASE: /scratch/xilinx-simlibs
  script:
    - sudo openvpn --mktun --dev tap0
    - sudo /sbin/ifconfig tap0 up 192.168.201.1
    - sudo chmod a+rw /dev/net/tun
    - export PATH=/software/mentor/modelsim_10.6c/modeltech/bin:$PATH
    - ipbb init work_area
    - cd work_area
    - ln -s ${CI_PROJECT_DIR} src/ipbus-firmware
    - ipbb proj create sim ram_slvs_tb ipbus-firmware:tests/ram_slaves -t top_sim.dep
    - cd proj/ram_slvs_tb
    - ipbb sim setup-simlib
    - ipbb sim ipcores
    - ipbb sim fli
    - ipbb sim make-project
    - ./vsim -c work.top -gIP_ADDR='X"c0a8c902"' -do 'run 1ms' -do 'quit'
